<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.jxnd.tongxuelu_album.dao.FriendMapper">
  <resultMap id="BaseResultMap" type="org.jxnd.tongxuelu_album.entity.Friend">
    <id column="f_id" jdbcType="INTEGER" property="fId" />
    <result column="my_id" jdbcType="VARCHAR" property="myId" />
    <result column="friend_id" jdbcType="VARCHAR" property="friendId" />
    <result column="comment" jdbcType="VARCHAR" property="comment" />
    <result column="is_attention" jdbcType="INTEGER" property="isAttention" />
  </resultMap>


  <resultMap id="UserBaseResultMap" type="org.jxnd.tongxuelu.entity.User">
    <id column="user_id" jdbcType="VARCHAR" property="userId" />
    <result column="nickname" jdbcType="VARCHAR" property="nickname" />
    <result column="gender" jdbcType="VARCHAR" property="gender" />
    <result column="birth" jdbcType="DATE" property="birth" />
    <result column="age" jdbcType="INTEGER" property="age" />
    <result column="email" jdbcType="VARCHAR" property="email" />
    <result column="qq" jdbcType="VARCHAR" property="qq" />
    <result column="register_time" jdbcType="TIMESTAMP" property="registerTime" />
    <result column="address" jdbcType="VARCHAR" property="address" />
    <result column="school" jdbcType="VARCHAR" property="school" />
    <result column="profession" jdbcType="VARCHAR" property="profession" />
    <result column="imgurl" jdbcType="VARCHAR" property="imgurl" />
    <result column="signal" jdbcType="VARCHAR" property="signal" />
    <result column="description" jdbcType="VARCHAR" property="description" />
  </resultMap>


  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    f_id, my_id, friend_id, comment, is_attention
  </sql>


  <!--只查询用户少量信息-->
  <sql id="Base_Column_UserList">
    user_id,nickname, gender, birth, age, email, qq, register_time, address,
    school, profession, imgurl, signal, description
  </sql>

  <!--自己增加的查询-->
  <!--根据用户id查询用户，注：为了信息安全只查询部分信息:查询已激活并且非锁定状态用户-->

  <select id="selectUserByUserId" parameterType="java.lang.String" resultMap="UserBaseResultMap">
    select
    <include refid="Base_Column_UserList" />
    from t_user
    where user_id = #{userId,jdbcType=VARCHAR} AND active=1 and state=0
  </select>



  <!--根据当前登陆用户查询好友-->
  <select id="selectFriendByMyIdAndFriendId" parameterType="org.jxnd.tongxuelu_album.entity.Friend" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from friend
    where my_id = #{myId,jdbcType=INTEGER} AND friend_id=#{friendId,jdbcType=INTEGER}
  </select>


  <!--查询用户的所有好友-->
  <select id="getAllByMyId" parameterType="java.lang.String" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from friend
    where my_id = #{userId}
  </select>




  <select id="selectByExample" parameterType="org.jxnd.tongxuelu_album.entity.FriendExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from friend
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from friend
    where f_id = #{fId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from friend
    where f_id = #{fId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="org.jxnd.tongxuelu_album.entity.FriendExample">
    delete from friend
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="org.jxnd.tongxuelu_album.entity.Friend">
    insert into friend (f_id, my_id, friend_id, 
      comment, is_attention)
    values (#{fId,jdbcType=INTEGER}, #{myId,jdbcType=VARCHAR}, #{friendId,jdbcType=VARCHAR}, 
      #{comment,jdbcType=VARCHAR}, #{isAttention,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="org.jxnd.tongxuelu_album.entity.Friend">
    insert into friend
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="fId != null">
        f_id,
      </if>
      <if test="myId != null">
        my_id,
      </if>
      <if test="friendId != null">
        friend_id,
      </if>
      <if test="comment != null">
        comment,
      </if>
      <if test="isAttention != null">
        is_attention,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="fId != null">
        #{fId,jdbcType=INTEGER},
      </if>
      <if test="myId != null">
        #{myId,jdbcType=VARCHAR},
      </if>
      <if test="friendId != null">
        #{friendId,jdbcType=VARCHAR},
      </if>
      <if test="comment != null">
        #{comment,jdbcType=VARCHAR},
      </if>
      <if test="isAttention != null">
        #{isAttention,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="org.jxnd.tongxuelu_album.entity.FriendExample" resultType="java.lang.Long">
    select count(*) from friend
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update friend
    <set>
      <if test="record.fId != null">
        f_id = #{record.fId,jdbcType=INTEGER},
      </if>
      <if test="record.myId != null">
        my_id = #{record.myId,jdbcType=VARCHAR},
      </if>
      <if test="record.friendId != null">
        friend_id = #{record.friendId,jdbcType=VARCHAR},
      </if>
      <if test="record.comment != null">
        comment = #{record.comment,jdbcType=VARCHAR},
      </if>
      <if test="record.isAttention != null">
        is_attention = #{record.isAttention,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update friend
    set f_id = #{record.fId,jdbcType=INTEGER},
      my_id = #{record.myId,jdbcType=VARCHAR},
      friend_id = #{record.friendId,jdbcType=VARCHAR},
      comment = #{record.comment,jdbcType=VARCHAR},
      is_attention = #{record.isAttention,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="org.jxnd.tongxuelu_album.entity.Friend">
    update friend
    <set>
      <if test="myId != null">
        my_id = #{myId,jdbcType=VARCHAR},
      </if>
      <if test="friendId != null">
        friend_id = #{friendId,jdbcType=VARCHAR},
      </if>
      <if test="comment != null">
        comment = #{comment,jdbcType=VARCHAR},
      </if>
      <if test="isAttention != null">
        is_attention = #{isAttention,jdbcType=INTEGER},
      </if>
    </set>
    where f_id = #{fId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="org.jxnd.tongxuelu_album.entity.Friend">
    update friend
    set my_id = #{myId,jdbcType=VARCHAR},
      friend_id = #{friendId,jdbcType=VARCHAR},
      comment = #{comment,jdbcType=VARCHAR},
      is_attention = #{isAttention,jdbcType=INTEGER}
    where f_id = #{fId,jdbcType=INTEGER}
  </update>
</mapper>