<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.jxnd.tongxuelu_album.dao.PhotoMapper">
  <resultMap id="BaseResultMap" type="org.jxnd.tongxuelu_album.entity.Photo">
    <id column="photo_id" jdbcType="INTEGER" property="photoId" />
    <result column="album_id" jdbcType="INTEGER" property="albumId" />
    <result column="photo_desc" jdbcType="VARCHAR" property="photoDesc" />
    <result column="photo_url" jdbcType="VARCHAR" property="photoUrl" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="delete_state" jdbcType="INTEGER" property="deleteState" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    photo_id, album_id, photo_desc, photo_url, update_time, delete_state
  </sql>

  <sql id="Base_Column_List_alias">
    p.photo_id, p.album_id, p.photo_desc, p.photo_url, p.update_time, p.delete_state
  </sql>

  <select id="selectByExample" parameterType="org.jxnd.tongxuelu_album.entity.PhotoExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from photo
    /*where delete_state =0*/
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from photo
    where  delete_state = 0 and photo_id = #{photoId,jdbcType=INTEGER}
  </select>


  <select id="selectByAlbumId" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from photo
    where delete_state = 0 and album_id = #{albumId,jdbcType=INTEGER}
  </select>

  <!--根据用户查询所有相片-->

  <select id="selectAllByUserId" parameterType="java.lang.String" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List_alias" />
    FROM photo p LEFT JOIN album a ON p.`album_id` = a.`album_id` LEFT JOIN t_user t ON a.`user_id` = t.`user_id`
    WHERE p.delete_state = 0 and t.user_id = #{userId}

  </select>

  <!--删除就是修改状态-->
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
  update photo set delete_state=1
  where photo_id = #{photoId,jdbcType=INTEGER}
</delete>




  <delete id="deleteByForeignKey" parameterType="java.lang.Integer">
    UPDATE photo set delete_state=1
    where album_id = #{albumId,jdbcType=INTEGER}
  </delete>




  <delete id="deleteByExample" parameterType="org.jxnd.tongxuelu_album.entity.PhotoExample">
    update  photo
    set delete_state = 0
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="org.jxnd.tongxuelu_album.entity.Photo">
    insert into photo (photo_id, album_id, photo_desc, 
      photo_url, update_time, delete_state
      )
    values (#{photoId,jdbcType=INTEGER}, #{albumId,jdbcType=INTEGER}, #{photoDesc,jdbcType=VARCHAR}, 
      #{photoUrl,jdbcType=VARCHAR}, #{updateTime,jdbcType=TIMESTAMP}, #{deleteState,jdbcType=INTEGER}
      )
  </insert>

  <insert id="insertSelective" parameterType="org.jxnd.tongxuelu_album.entity.Photo">
    insert into photo
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="photoId != null">
        photo_id,
      </if>
      <if test="albumId != null">
        album_id,
      </if>
      <if test="photoDesc != null">
        photo_desc,
      </if>
      <if test="photoUrl != null">
        photo_url,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="deleteState != null">
        delete_state,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="photoId != null">
        #{photoId,jdbcType=INTEGER},
      </if>
      <if test="albumId != null">
        #{albumId,jdbcType=INTEGER},
      </if>
      <if test="photoDesc != null">
        #{photoDesc,jdbcType=VARCHAR},
      </if>
      <if test="photoUrl != null">
        #{photoUrl,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="deleteState != null">
        #{deleteState,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>


  <insert id ="savePhotoList" parameterType="java.util.List" >
         <selectKey resultType ="java.lang.Integer" keyProperty= "id"
              order= "AFTER">
             SELECT LAST_INSERT_ID()
         </selectKey >
        insert into photo
        (album_id, photo_desc, photo_url)
        values
        <foreach collection ="list" item="photo" index= "index" separator =",">
            (
             #{photo.albumId}, #{photo.photoDesc},
             #{photo.photoUrl}
             )
         </foreach >
  </insert >





  <select id="countByExample" parameterType="org.jxnd.tongxuelu_album.entity.PhotoExample" resultType="java.lang.Long">
    select count(*) from photo
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>

  <!--批量更新-->
  <delete id="deletePhotoByBatch">
    update photo   set
    delete_state=1
    where photo_id in
    <foreach collection="array" index="index" item="item" open="(" separator="," close=")">
      #{item}
    </foreach>
  </delete>



  <update id="updateByExampleSelective" parameterType="map">
    update photo
    <set>
      <if test="record.photoId != null">
        photo_id = #{record.photoId,jdbcType=INTEGER},
      </if>
      <if test="record.albumId != null">
        album_id = #{record.albumId,jdbcType=INTEGER},
      </if>
      <if test="record.photoDesc != null">
        photo_desc = #{record.photoDesc,jdbcType=VARCHAR},
      </if>
      <if test="record.photoUrl != null">
        photo_url = #{record.photoUrl,jdbcType=VARCHAR},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.deleteState != null">
        delete_state = #{record.deleteState,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update photo
    set photo_id = #{record.photoId,jdbcType=INTEGER},
      album_id = #{record.albumId,jdbcType=INTEGER},
      photo_desc = #{record.photoDesc,jdbcType=VARCHAR},
      photo_url = #{record.photoUrl,jdbcType=VARCHAR},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      delete_state = #{record.deleteState,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="org.jxnd.tongxuelu_album.entity.Photo">
    update photo
    <set>
      <if test="albumId != null">
        album_id = #{albumId,jdbcType=INTEGER},
      </if>
      <if test="photoDesc != null">
        photo_desc = #{photoDesc,jdbcType=VARCHAR},
      </if>
      <if test="photoUrl != null">
        photo_url = #{photoUrl,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="deleteState != null">
        delete_state = #{deleteState,jdbcType=INTEGER},
      </if>
    </set>
    where photo_id = #{photoId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="org.jxnd.tongxuelu_album.entity.Photo">
    update photo
    set album_id = #{albumId,jdbcType=INTEGER},
      photo_desc = #{photoDesc,jdbcType=VARCHAR},
      photo_url = #{photoUrl,jdbcType=VARCHAR},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      delete_state = #{deleteState,jdbcType=INTEGER}
    where photo_id = #{photoId,jdbcType=INTEGER}
  </update>
</mapper>