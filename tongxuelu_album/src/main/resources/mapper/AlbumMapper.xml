<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.jxnd.tongxuelu_album.dao.AlbumMapper">
  <resultMap id="BaseResultMap" type="org.jxnd.tongxuelu_album.entity.Album">
  <id column="album_id" jdbcType="INTEGER" property="albumId" />
  <result column="album_name" jdbcType="VARCHAR" property="albumName" />
  <result column="view_lock" jdbcType="INTEGER" property="viewLock" />
  <result column="view_issue" jdbcType="VARCHAR" property="viewIssue" />
  <result column="view_key" jdbcType="VARCHAR" property="viewKey" />
  <result column="user_id" jdbcType="VARCHAR" property="userId" />
</resultMap>

  <resultMap id="BaseResultMapWithPhotoOne" type="org.jxnd.tongxuelu_album.entity.Album">
    <id column="album_id" jdbcType="INTEGER" property="albumId" />
    <result column="album_name" jdbcType="VARCHAR" property="albumName" />
    <result column="view_lock" jdbcType="INTEGER" property="viewLock" />
    <result column="view_issue" jdbcType="VARCHAR" property="viewIssue" />
    <result column="view_key" jdbcType="VARCHAR" property="viewKey" />
    <result column="user_id" jdbcType="VARCHAR" property="userId" />

    <!-- 相片信息
   一个相册关联查询出了多个（我只查出）个相片，要使用collection进行映射
    collection：对关联查询到多条记录映射到集合对象中
    property：将关联查询到多条记录映射到cn.itcast.mybatis.po.Orders哪个属性
    ofType：指定映射到list集合属性中pojo的类型
 -->
    <collection property="photoList" ofType="org.jxnd.tongxuelu_album.entity.Photo">
      <!-- id：photo唯 一标识
      property:要将photo的唯 一标识 映射到org.jxnd.tongxuelu_album.entity.Photo的哪个属性
        -->
      <id column="photo_id" property="photoId"/>
      <result column="album_id" property="albumId"/>
      <result column="photo_desc" property="photoDesc"/>
      <result column="photo_url" property="photoUrl"/>
      <result column="update_time" property="updateTime"/>
      <result column="delete_state" property="deleteState"/>
    </collection>
  </resultMap>

  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    album_id, album_name, view_lock, view_issue, view_key, user_id
  </sql>

  <sql id="Base_Column_List_WithPhotoOne">
    a.album_id, a.album_name, a.view_lock, a.view_issue, a.view_key, a.user_id,p.photo_id,
    p.photo_desc,p.photo_url,p.update_time,p.delete_state,COUNT(DISTINCT a.album_id)
  </sql>


  <select id="selectByExample" parameterType="org.jxnd.tongxuelu_album.entity.AlbumExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from album
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>

  <select id="selectByExampleWithPhotoOne" parameterType="org.jxnd.tongxuelu_album.entity.AlbumExample" resultMap="BaseResultMapWithPhotoOne">
    select
   <!-- <if test="distinct">
      distinct
    </if>-->
    <include refid="Base_Column_List_WithPhotoOne" />

    from album a left join photo p on a.album_id = p.album_id
    GROUP BY a.album_id
   <!-- <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>-->
  </select>

  <select id="selectAllByUserIdWithPhotoOne" parameterType="java.lang.String" resultMap="BaseResultMapWithPhotoOne">
    select
    <include refid="Base_Column_List_WithPhotoOne" />
    from album a left join photo p on a.album_id = p.album_id

    where a.user_id = #{userId}
    GROUP BY a.album_id
  </select>


  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from album
    where album_id = #{albumId,jdbcType=INTEGER}
  </select>


  <select id="checkAnswer" parameterType="org.jxnd.tongxuelu_album.entity.Album" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from album
    where album_id = #{albumId,jdbcType=INTEGER} AND  view_key = #{viewKey}
  </select>





  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from album
    where album_id = #{albumId,jdbcType=INTEGER}
  </delete>

  <!--级联删除-->
  <!--<delete id="deleteByPrimaryKeyWithPhoto" parameterType="java.lang.Integer">
    delete from photo
    where album_id = #{albumId,jdbcType=INTEGER}
    delete from album
    where album_id = #{albumId,jdbcType=INTEGER}
  </delete>-->


  <delete id="deleteByExample" parameterType="org.jxnd.tongxuelu_album.entity.AlbumExample">
    delete from album
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="org.jxnd.tongxuelu_album.entity.Album">
    insert into album (album_id, album_name, view_lock, 
      view_issue, view_key, user_id
      )
    values (#{albumId,jdbcType=INTEGER}, #{albumName,jdbcType=VARCHAR}, #{viewLock,jdbcType=INTEGER}, 
      #{viewIssue,jdbcType=VARCHAR}, #{viewKey,jdbcType=VARCHAR}, #{userId,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="org.jxnd.tongxuelu_album.entity.Album">
    insert into album
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="albumId != null">
        album_id,
      </if>
      <if test="albumName != null">
        album_name,
      </if>
      <if test="viewLock != null">
        view_lock,
      </if>
      <if test="viewIssue != null">
        view_issue,
      </if>
      <if test="viewKey != null">
        view_key,
      </if>
      <if test="userId != null">
        user_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="albumId != null">
        #{albumId,jdbcType=INTEGER},
      </if>
      <if test="albumName != null">
        #{albumName,jdbcType=VARCHAR},
      </if>
      <if test="viewLock != null">
        #{viewLock,jdbcType=INTEGER},
      </if>
      <if test="viewIssue != null">
        #{viewIssue,jdbcType=VARCHAR},
      </if>
      <if test="viewKey != null">
        #{viewKey,jdbcType=VARCHAR},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="org.jxnd.tongxuelu_album.entity.AlbumExample" resultType="java.lang.Long">
    select count(*) from album
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update album
    <set>
      <if test="record.albumId != null">
        album_id = #{record.albumId,jdbcType=INTEGER},
      </if>
      <if test="record.albumName != null">
        album_name = #{record.albumName,jdbcType=VARCHAR},
      </if>
      <if test="record.viewLock != null">
        view_lock = #{record.viewLock,jdbcType=INTEGER},
      </if>
      <if test="record.viewIssue != null">
        view_issue = #{record.viewIssue,jdbcType=VARCHAR},
      </if>
      <if test="record.viewKey != null">
        view_key = #{record.viewKey,jdbcType=VARCHAR},
      </if>
      <if test="record.userId != null">
        user_id = #{record.userId,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update album
    set album_id = #{record.albumId,jdbcType=INTEGER},
      album_name = #{record.albumName,jdbcType=VARCHAR},
      view_lock = #{record.viewLock,jdbcType=INTEGER},
      view_issue = #{record.viewIssue,jdbcType=VARCHAR},
      view_key = #{record.viewKey,jdbcType=VARCHAR},
      user_id = #{record.userId,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="org.jxnd.tongxuelu_album.entity.Album">
    update album
    <set>
      <if test="albumName != null">
        album_name = #{albumName,jdbcType=VARCHAR},
      </if>
      <if test="viewLock != null">
        view_lock = #{viewLock,jdbcType=INTEGER},
      </if>
      <if test="viewIssue != null">
        view_issue = #{viewIssue,jdbcType=VARCHAR},
      </if>
      <if test="viewKey != null">
        view_key = #{viewKey,jdbcType=VARCHAR},
      </if>
      <if test="userId != null">
        user_id = #{userId,jdbcType=VARCHAR},
      </if>
    </set>
    where album_id = #{albumId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="org.jxnd.tongxuelu_album.entity.Album">
    update album
    set album_name = #{albumName,jdbcType=VARCHAR},
      view_lock = #{viewLock,jdbcType=INTEGER},
      view_issue = #{viewIssue,jdbcType=VARCHAR},
      view_key = #{viewKey,jdbcType=VARCHAR},
      user_id = #{userId,jdbcType=VARCHAR}
    where album_id = #{albumId,jdbcType=INTEGER}
  </update>
</mapper>